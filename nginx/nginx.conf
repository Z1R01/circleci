worker_processes  auto;
worker_rlimit_nofile 1048576;
events {
    worker_connections 1024 ;
  #  use epoll;
    multi_accept on;
}

http {
    sendfile off;
    tcp_nopush on;
    directio 512;
    types_hash_max_size 2048;
    default_type application/octet-stream;
    log_format compression '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" "$gzip_ratio"';
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    tcp_nodelay on;
    keepalive_timeout 65;
    server_tokens off;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";

#    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
#    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#    ssl_prefer_server_ciphers on;
#    ssl_session_cache shared:SSL:50m;
#    ssl_session_tickets off;
#    ssl_stapling on;
#    ssl_stapling_verify on;
    # allow the server to close connection on non responding client, this will free up memory
    #reset_timedout_connection on;

    resolver 8.8.4.4 8.8.8.8 valid=300s ipv6=off;
    resolver_timeout 10s;
    # request timed out -- default 60
    client_body_timeout 10;

    # if client stop responding, free up memory -- default 60
    send_timeout 2;

    # server will close connection after this time -- default 75
    #keepalive_timeout 30;

    # number of requests client can make over keep-alive -- for testing environment
    keepalive_requests 100000;

    #limit_req_zone $binary_remote_addr zone=mylimit:1000m rate=15r/s;
    # gzip
    gzip on;
    gzip_disable "msie6";
    gzip_http_version 1.1;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/javascript application/x-javascript text/xml application/xml application/xml+rss application/vnd.ms-fontobject application/x-font-ttf font/opentype font/x-woff image/svg+xml image/x-icon;

    # proxy

#    server {
#        listen 443 ;
#server {
#        listen 80;
#        return 301 https://$host$request_uri;
#}
server {
        listen 80 default_server;
        listen [::]:80 default_server;

#	ssl_certificate       /etc/nginx/ssl/fullchain.crt;
#       ssl_certificate_key   /etc/nginx/ssl/privkey.key;

	server_name runner-msi.10d.ir; 

	access_log /var/log/nginx/access.log ;
	error_log /var/log/nginx/error.log warn;

        limit_rate_after 4m;
        limit_rate 200k;
    #    limit_req zone=mylimit;

        client_body_buffer_size 10K;
        client_header_buffer_size 1k;
        client_max_body_size 8m;
        large_client_header_buffers 2 1k;

        location / {
#            proxy_set_header        Host $host;
#            proxy_set_header        X-Real-IP $remote_addr;
#            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
#            proxy_set_header        X-Forwarded-Proto $scheme;

      # Fix the â€œIt appears that your reverse proxy set up is broken" error.
#            proxy_pass          http://convert.aanplatform.ir:80;
#            proxy_read_timeout  90;

#            proxy_redirect      http://convert.aanplaform.ir https://convert.aanplatform.ir;


#            deny all;
#            auth_basic "Restricted Content";
#            auth_basic_user_file /data/nginx-stream-convert/.htpasswd;
#            autoindex off;
#            autoindex on;

            # Disable cache
            add_header 'Cache-Control' 'no-cache';
	    
            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';
	    add_header X-Frame-Options SAMEORIGIN;
	    add_header X-Content-Type-Options nosniff;
	    add_header X-XSS-Protection "1; mode=block";

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }


#        location ~ ^/([0-9]/) {
#                try_files $uri $uri/ =404;
#                autoindex on;
#        }

        root /var/www/html/panel;
	}
    }
}
